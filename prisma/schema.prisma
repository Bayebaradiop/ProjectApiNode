generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  id    Int    @id @default(autoincrement())
  nom   String @unique
  users User[]
}

model ProfilSortie {
  id    Int    @id @default(autoincrement())
  nom   String @unique
  users User[]
}

model User {
  id             Int           @id @default(autoincrement())
  username       String
  email          String        @unique
  password       String
  profileId      Int
  profilSortieId Int?
  referentielId  Int?

  profile        Profile       @relation(fields: [profileId], references: [id])
  profilSortie   ProfilSortie? @relation(fields: [profilSortieId], references: [id])
  referentiel    Referentiel?  @relation(fields: [referentielId], references: [id])

  promosFormateur PromoFormateurs[]
  refreshTokens  RefreshToken[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([expiresAt])
}

model Promo {
  id           Int      @id @default(autoincrement())
  nom          String   @unique
  dateDebut    DateTime
  dateFin      DateTime

  formateurs   PromoFormateurs[]
  referentiels PromoReferentiel[]
}

model PromoFormateurs {
  promoId Int
  userId  Int

  promo   Promo @relation(fields: [promoId], references: [id])
  user    User  @relation(fields: [userId], references: [id])

  @@id([promoId, userId])
}

model PromoReferentiel {
  promoId       Int
  referentielId Int

  promo         Promo       @relation(fields: [promoId], references: [id])
  referentiel   Referentiel @relation(fields: [referentielId], references: [id])

  @@id([promoId, referentielId])
}

model Niveau {
  id          Int                   @id @default(autoincrement())
  nom         String @unique
  competences CompetenceNiveau[]
}

model Competence {
  id           Int                   @id @default(autoincrement())
  nom          String @unique
  description  String?
  niveaux      CompetenceNiveau[]
  referentiels ReferentielCompetence[]
}

model CompetenceNiveau {
  competenceId Int
  niveauId     Int

  competence   Competence @relation(fields: [competenceId], references: [id])
  niveau       Niveau     @relation(fields: [niveauId], references: [id])

  @@id([competenceId, niveauId])
}

model Referentiel {
  id          Int                    @id @default(autoincrement())
  nom         String @unique
  description String?
  competences ReferentielCompetence[]
  users       User[]                 
  promos      PromoReferentiel[]
}

model ReferentielCompetence {
  referentielId Int
  competenceId  Int

  referentiel   Referentiel @relation(fields: [referentielId], references: [id])
  competence    Competence  @relation(fields: [competenceId], references: [id])

  @@id([referentielId, competenceId])
}

model Tag {
  id   Int    @id @default(autoincrement())
  nom  String @unique
}